apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ci-cd-pipeline
  namespace: tekton-pipelines
spec:
  params:
    - name: git-repository-url
      description: The Git repository URL to clone
      default: "https://github.com/your-org/your-repository.git"  # Replace with your Git repo
    - name: git-repository-ref
      description: The Git branch or tag to checkout
      default: "main"  # Default branch is 'main'
    - name: image-name
      description: The Docker image name
      default: "your-image-name"  # Replace with your image name
    - name: image-tag
      description: The Docker image tag
      default: "latest"  # Default to 'latest'
  resources:
    - name: git-source
      type: Git
    - name: image
      type: Image
  tasks:
    - name: clone-repository
      taskRef:
        name: git-clone
      resources:
        outputs:
          - name: source
            resourceRef:
              name: git-source
      params:
        - name: url
          value: "$(params.git-repository-url)"
        - name: revision
          value: "$(params.git-repository-ref)"

    - name: build-image
      taskRef:
        name: kaniko
      resources:
        inputs:
          - name: source
            resourceRef:
              name: git-source
        outputs:
          - name: builtImage
            resourceRef:
              name: image
      params:
        - name: image
          value: "$(params.image-name):$(params.image-tag)"
        - name: dockerfile
          value: "Dockerfile"
        - name: context
          value: "$(resources.inputs.source.path)"  # Context path for Docker build
        - name: cache
          value: "true"  # Enable caching to speed up future builds
        - name: cache-dir
          value: "/workspace/cache"

    - name: run-tests
      taskRef:
        name: test-task  # Replace with your task that runs tests
      resources:
        inputs:
          - name: source
            resourceRef:
              name: git-source
      params:
        - name: test-dir
          value: "/workspace/source/tests"  # Path to the test directory in your repo

    - name: deploy-app
      taskRef:
        name: kubectl-deploy  # Replace with your kubectl deployment task
      resources:
        inputs:
          - name: builtImage
            resourceRef:
              name: image
      params:
        - name: image
          value: "$(params.image-name):$(params.image-tag)"
        - name: kubectl-context
          value: "my-cluster"  # Replace with your Kubernetes cluster context
        - name: deployment-name
          value: "my-app"  # Replace with your deployment name
        - name: namespace
          value: "production"  # Target namespace for deployment
        - name: kubectl-command
          value: "apply -f k8s/deployment.yaml"  # Kubernetes deployment command
