# argo/apps/monitoring/prometheus-stack/values.yaml

grafana:
  enabled: true
  adminPassword: "$__file{/var/run/secrets/grafana/admin_password}"
  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - grafana.samakia.lab
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    tls:
      - secretName: "grafana-tls"
        hosts:
          - grafana.samakia.lab
  persistence:
    enabled: true
    storageClassName: "standard"
    size: 20Gi
    accessModes:
      - ReadWriteOnce

prometheus:
  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - prometheus.samakia.lab
    annotations:
      nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.samakia.lab/oauth2/start"
      nginx.ingress.kubernetes.io/auth-url: "https://oauth2-proxy.samakia.lab/oauth2/auth"
    tls:
      - secretName: "prometheus-tls"
        hosts:
          - prometheus.samakia.lab
  prometheusSpec:
    retention: 15d
    retentionSize: "50GiB"
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: "standard"
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 100Gi

alertmanager:
  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - alertmanager.samakia.lab
    annotations:
      nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.samakia.lab/oauth2/start"
      nginx.ingress.kubernetes.io/auth-url: "https://oauth2-proxy.samakia.lab/oauth2/auth"
    tls:
      - secretName: "alertmanager-tls"
        hosts:
          - alertmanager.samakia.lab
  alertmanagerSpec:
    retention: "120h"
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: "standard"
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 20Gi
  config:
    global:
      resolve_timeout: "5m"
      smtp_from: "alertmanager@samakia.lab"
      smtp_smarthost: "smtp:587"
      smtp_auth_username: "alertmanager"
      smtp_auth_password: "$__file{/var/run/secrets/alertmanager/smtp_password}"
    route:
      group_by: ["namespace", "severity"]
      group_wait: "30s"
      group_interval: "5m"
      repeat_interval: "12h"
      receiver: "slack-notifications"
      routes:
      - match:
          severity: "critical"
        receiver: "pagerduty"
    receivers:
    - name: "slack-notifications"
      slack_configs:
      - api_url: "$__file{/var/run/secrets/alertmanager/slack_url}"
        channel: "#alerts"
        send_resolved: true
    - name: "pagerduty"
      pagerduty_configs:
      - routing_key: "$__file{/var/run/secrets/alertmanager/pagerduty_key}"

# Monitoring components
kubeApiServer:
  enabled: true
kubelet:
  enabled: true
kubeControllerManager:
  enabled: true
coreDns:
  enabled: true
kubeEtcd:
  enabled: true
kubeScheduler:
  enabled: true
kubeProxy:
  enabled: true
kubeStateMetrics:
  enabled: true
nodeExporter:
  enabled: true