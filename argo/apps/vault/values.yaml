# Vault Helm chart values file
# This file contains the default settings for Vault installation on Kubernetes.

## Vault Server Configuration
server:
  enabled: true
  replicaCount: 1  # Number of Vault replicas (1 for HA, 1 for single instance)
  service:
    type: ClusterIP
    port: 8200  # Vault service port
  resources:
    limits:
      cpu: "500m"
      memory: "1Gi"
    requests:
      cpu: "250m"
      memory: "512Mi"
  nodeSelector: {}  # Configure node selector for pod scheduling
  tolerations: []  # Configure tolerations for pod scheduling
  affinity: {}  # Configure pod affinity rules
  storage:
    haStorage:
      enabled: true
      size: 10Gi  # Size of the storage volume for Vault
      class: default  # Storage class (e.g., default, fast, etc.)
      accessMode: ReadWriteOnce  # Persistent volume access mode
      # Define the storage backend configuration (e.g., Consul, AWS, etc.)
      config:
        # Example for using a local file backend
        path: /vault/file
    # Example for using Consul as the storage backend
    # consul:
    #   enabled: true
    #   address: "consul.service.consul:8500"

## Vault UI Configuration
ui:
  enabled: true  # Enable Vault UI for easy access and management
  serviceType: ClusterIP  # Expose UI as ClusterIP (can be changed to LoadBalancer or NodePort)
  servicePort: 8200  # Port for Vault UI
  ingress:
    enabled: false  # Set to true if you want to expose the UI using Ingress
    annotations: {}
    hosts:
      - vault.local.samakia.lab  # Customize this for your domain
    path: /  # Path for accessing Vault UI
    tls: false  # Enable TLS for Ingress (requires certificates)

## Vault Auth Methods (configure as needed)
authMethods:
  kubernetes:
    enabled: true  # Enable Kubernetes authentication method
    mount_path: /auth/kubernetes
    config:
      kubernetes_host: "https://kubernetes.default.svc"
      kubernetes_ca_cert: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
      token_reviewer_jwt: "/var/run/secrets/kubernetes.io/serviceaccount/token"
      issuer: "https://kubernetes.default.svc.cluster.local"

## Vault Secret Engines (configure as needed)
secretEngines:
  kv:
    enabled: true  # Enable Key-Value secret engine
    path: secret  # Path where the secrets will be stored
    config:
      default_lease_ttl: "24h"  # Default lease TTL for secrets
      max_lease_ttl: "72h"  # Max lease TTL for secrets
  pki:
    enabled: true  # Enable Public Key Infrastructure (PKI) secrets engine
    path: pki  # Path for storing certificates
    config:
      default_lease_ttl: "24h"  # Default TTL for certificates
      max_lease_ttl: "72h"  # Max TTL for certificates
      # Example for configuring the root certificate and other PKI settings
      certificate:
        certificate: /path/to/certificate.pem
        private_key: /path/to/private_key.pem

## Vault Agent Injector (to inject Vault secrets into Kubernetes pods)
vaultAgent:
  enabled: true  # Enable Vault Agent Injector
  injector:
    enabled: true  # Enable automatic injection of secrets into Kubernetes pods
    config:
      sync: true
      secretInjectors:
        - secret_path: "secret/data/myapp/config"
          mount_path: "/etc/secrets"  # Path to mount secrets inside pods

## Enable and Configure Vault's Key Management Service (KMS)
kms:
  enabled: true  # Enable KMS integration for encryption/decryption
  kmsProvider: AWS  # Configure KMS provider (AWS, GCP, Azure, etc.)
  kmsConfig:
    accessKeyId: "your-access-key-id"  # Access Key for AWS (replace with real value)
    secretAccessKey: "your-secret-access-key"  # Secret Access Key for AWS
    region: "us-east-1"  # Region for AWS KMS (or the respective region for other providers)

## Vault Policies
vaultPolicies:
  - name: default-policy
    policy: |
      # Basic policy for read access to secrets
      path "secret/data/*" {
        capabilities = ["read"]
      }
  - name: admin-policy
    policy: |
      # Admin policy with full access to secrets
      path "secret/*" {
        capabilities = ["create", "read", "update", "delete"]
      }

## Vault ACL Configuration
acl:
  enabled: true  # Enable Vault Access Control List (ACL)
  policies:
    - name: read-only
      policy: |
        path "secret/data/*" {
          capabilities = ["read"]
        }
    - name: full-access
      policy: |
        path "secret/*" {
          capabilities = ["create", "read", "update", "delete"]
        }

## Vault Security Configuration
vaultConfig:
  ui: true  # Enable the Vault UI
  api_addr: "http://localhost:8200"  # API address for Vault
  cluster_addr: "https://localhost:8201"  # Cluster address for Vault (HA)
  listener:
    tcp:
      address: "0.0.0.0:8200"
      cluster_address: "0.0.0.0:8201"
      tls_disable: true  # Disable TLS (set to true in production with proper TLS setup)

## Enable Vault Telemetry for Monitoring (Optional)
telemetry:
  enabled: false  # Set to true to enable Vault telemetry for monitoring with Prometheus
  prometheus:
    enabled: true  # Enable Prometheus scraping
    port: 9102  # Port for Prometheus metrics

## Enable Audit Devices (for logging access to secrets)
auditDevices:
  - type: file
    options:
      path: /var/log/vault_audit.log
